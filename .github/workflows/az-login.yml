name: Azure Login

# This workflow logs into Azure using credentials stored in GitHub secrets
# It supports two authentication methods:
# 1. Using AZURE_CREDENTIALS JSON (preferred)
# 2. Using individual credential secrets (AZURE_CLIENT_ID, AZURE_CLIENT_SECRET, etc.)

on:
  workflow_dispatch:
    inputs:
      resource-group:
        description: 'Azure resource group to use'
        required: false
        type: string
      location:
        description: 'Azure location (region)'
        required: false
        type: string
        default: 'eastus'

permissions:
  id-token: write
  contents: read

jobs:
  azure-login:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Try login with AZURE_CREDENTIALS JSON format (preferred method)
      - name: Login with AZURE_CREDENTIALS JSON
        if: secrets.AZURE_CREDENTIALS != ''
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # If AZURE_CREDENTIALS not available, try individual credential parameters
      - name: Login with individual credentials
        if: secrets.AZURE_CREDENTIALS == '' && secrets.AZURE_CLIENT_ID != ''
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Set up environment variables based on inputs and available secrets
      - name: Set environment variables
        run: |
          echo "Setting up Azure environment variables"
          
          # Set subscription ID from the current Azure account
          SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          echo "AZURE_SUBSCRIPTION_ID=${SUBSCRIPTION_ID}" >> $GITHUB_ENV
          echo "Connected to Azure subscription: $(az account show --query name -o tsv) (${SUBSCRIPTION_ID})"
          
          # Set resource group - prioritize workflow inputs over secrets
          if [[ -n "${{ inputs.resource-group }}" ]]; then
            echo "AZURE_RESOURCE_GROUP=${{ inputs.resource-group }}" >> $GITHUB_ENV
            echo "Using resource group: ${{ inputs.resource-group }}"
          elif [[ -n "${{ secrets.AZURE_RESOURCE_GROUP }}" ]]; then
            echo "AZURE_RESOURCE_GROUP=${{ secrets.AZURE_RESOURCE_GROUP }}" >> $GITHUB_ENV
            echo "Using resource group from secrets: ${{ secrets.AZURE_RESOURCE_GROUP }}"
          fi
          
          # Set location - prioritize workflow inputs over secrets, with default fallback
          if [[ -n "${{ inputs.location }}" ]]; then
            echo "AZURE_LOCATION=${{ inputs.location }}" >> $GITHUB_ENV
            echo "Using location: ${{ inputs.location }}"
          elif [[ -n "${{ secrets.AZURE_LOCATION }}" ]]; then
            echo "AZURE_LOCATION=${{ secrets.AZURE_LOCATION }}" >> $GITHUB_ENV
            echo "Using location from secrets"
          else
            echo "AZURE_LOCATION=eastus" >> $GITHUB_ENV
            echo "Using default location: eastus"
          fi

      # Verify the connection and display account information
      - name: Verify Azure Connection
        run: |
          echo "Verifying Azure connection..."
          az account show --output table
          echo "Azure login successful"